@model IEnumerable<PickUpSports.Models.Event>
@{
    ViewBag.Title = "Events Of Interest";
}
<h2><a href="https://fontmeme.com/fonts/college-font/"><img src="https://fontmeme.com/permalink/200124/8c39ad85f94634f0847aeec7406b2754.png" alt="college-font" border="0"></a></h2>
<body class="interestback">
</body>
<p>
    @Html.ActionLink("Create New", "Create")
</p>
<h3>Today's Local Events</h3>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.EventName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Player.ApplicationUser.UserName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.SportsName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.StreetAddress)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.City)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.State)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ZipCode)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.SkillLevel)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.PlayerRating)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.DateOfEvent)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.TimeOfEvent)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.MaximumPlayers)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.CurrentPlayers)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.IsFull)
        </th>
        <th></th>
    </tr>
    @foreach (var item in Model)
    {
<tr>
    <td>
        @Html.DisplayFor(modelItem => item.EventName)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.Player.ApplicationUser.UserName)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.SportsName)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.StreetAddress)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.City)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.State)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.ZipCode)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.SkillLevel)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.PlayerRating)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.DateOfEvent)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.TimeOfEvent)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.MaximumPlayers)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.CurrentPlayers)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.IsFull)
    </td>
    <td>
        @Html.ActionLink("Join Event", "JoinEvent", new { id = item.EventId }) 
    </td>
</tr>
    }
</table>
<div id="map2" style="height:400px">
    <script>
        function initializeMap()
        {
            var center = { lat: 43.038902, lng: -87.906471};
            var map = new google.maps.Map(document.getElementById('map2'), { zoom: 4, center: center });
            @if (Model != null && Model.Count() != 0)
            {
                foreach (var item in Model)
                {
                    <text>
                    var location = { lat: @item.Latitude, lng: @item.Longitude};
                    var marker = new google.maps.Marker({
                    map: map,
                    position: location,
                    title: '@item.EventName'
                    });
                    </text>
                }
            }
        }
    </script>
</div>
    <script async defer
            src=@Model.First().apiKeyString>
    </script>